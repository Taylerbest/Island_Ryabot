import socket
import requests


def get_ipv4_for_supabase():
    host = "db.fqgcctsvozcoezpfytck.supabase.co"

    # –ú–µ—Ç–æ–¥ 1: –ß–µ—Ä–µ–∑ socket —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º IPv4
    try:
        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º IPv4
        result = socket.getaddrinfo(host, 5432, socket.AF_INET)
        if result:
            ipv4 = result[0][4][0]
            print(f"‚úÖ IPv4 —á–µ—Ä–µ–∑ socket: {ipv4}")
            return ipv4
    except Exception as e:
        print(f"‚ùå Socket –º–µ—Ç–æ–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

    # –ú–µ—Ç–æ–¥ 2: –ß–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π DNS API
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º CloudFlare DNS over HTTPS
        url = f"https://cloudflare-dns.com/dns-query?name={host}&type=A"
        headers = {'Accept': 'application/dns-json'}

        response = requests.get(url, headers=headers, timeout=10)
        data = response.json()

        if 'Answer' in data and data['Answer']:
            ipv4 = data['Answer'][0]['data']
            print(f"‚úÖ IPv4 —á–µ—Ä–µ–∑ CloudFlare DNS: {ipv4}")
            return ipv4

    except Exception as e:
        print(f"‚ùå CloudFlare DNS –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {e}")

    # –ú–µ—Ç–æ–¥ 3: –ò–∑–≤–µ—Å—Ç–Ω—ã–π IPv4 –¥–ª—è Supabase (–º–æ–∂–µ—Ç —É—Å—Ç–∞—Ä–µ—Ç—å)
    fallback_ip = "3.64.163.50"
    print(f"‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback IP: {fallback_ip}")
    return fallback_ip


if __name__ == "__main__":
    ipv4 = get_ipv4_for_supabase()
    print(f"\nüìã –û–±–Ω–æ–≤–∏ .env —Ñ–∞–π–ª:")
    print(f"POSTGRES_HOST={ipv4}")
