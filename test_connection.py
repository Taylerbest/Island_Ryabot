"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase –¥–ª—è Ryabot Island
"""
import asyncio
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def test_supabase_connection():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase"""
    print("üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...")

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        supabase_url = os.getenv("SUPABASE_URL")
        supabase_key = os.getenv("SUPABASE_ANON_KEY")

        if not supabase_url or not supabase_key:
            print("‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env")
            return False

        print(f"‚úÖ URL: {supabase_url}")
        print(f"‚úÖ Key: {supabase_key[:20]}...")

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
        from database.supabase_client import supabase_manager
        supabase_manager.initialize()

        # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        result = await supabase_manager.execute_query(
            table="users",
            operation="count"
        )

        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: {result or 0}")
        return True

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏: pip install supabase python-dotenv")
        return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –∫–ª—é—á–∏ –≤ .env —Ñ–∞–π–ª–µ")
        return False


async def test_telegram_token():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram...")

    try:
        bot_token = os.getenv("BOT_TOKEN")

        if not bot_token:
            print("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ .env")
            return False

        print(f"‚úÖ Token: {bot_token[:10]}...{bot_token[-10:]}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ API
        from aiogram import Bot
        bot = Bot(token=bot_token)

        bot_info = await bot.get_me()
        print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot_info.username} ({bot_info.first_name})")

        await bot.session.close()
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å —Ç–æ–∫–µ–Ω–æ–º –±–æ—Ç–∞: {e}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN –≤ .env —Ñ–∞–π–ª–µ")
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("=" * 50)
    print("üèùÔ∏è  RYABOT ISLAND - –¢–ï–°–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô")
    print("=" * 50)

    # –¢–µ—Å—Ç 1: Supabase
    supabase_ok = await test_supabase_connection()

    # –¢–µ—Å—Ç 2: Telegram
    telegram_ok = await test_telegram_token()

    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)

    if supabase_ok and telegram_ok:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print("‚úÖ Telegram —Ç–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω")
        print("\nüöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python main.py")
    else:
        print("‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
        if not supabase_ok:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Supabase")
        if not telegram_ok:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å Telegram")
        print("\nüîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞")


if __name__ == "__main__":
    asyncio.run(main())
