import asyncio
import os
import socket
from dotenv import load_dotenv

load_dotenv()


async def test_supabase_ipv4():
    host = os.getenv("POSTGRES_HOST")
    user = os.getenv("POSTGRES_USER")
    password = os.getenv("POSTGRES_PASSWORD")
    db = os.getenv("POSTGRES_DB")
    port = int(os.getenv("POSTGRES_PORT", 5432))

    print(f"üîç –•–æ—Å—Ç: {host}")

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Ä–µ–∑–æ–ª–≤–∏–º –≤ IPv4
    try:
        print("üåê –†–µ–∑–æ–ª–≤–∏–º IPv4 –∞–¥—Ä–µ—Å...")
        ipv4_address = socket.gethostbyname(host)
        print(f"‚úÖ IPv4 –∞–¥—Ä–µ—Å: {ipv4_address}")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IPv4: {e}")
        return

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ IPv4 –∞–¥—Ä–µ—Å—É –≤–º–µ—Å—Ç–æ —Ö–æ—Å—Ç–∞
    try:
        import asyncpg

        print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ {ipv4_address}:{port}...")
        conn = await asyncpg.connect(
            host=ipv4_address,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º IP –≤–º–µ—Å—Ç–æ —Ö–æ—Å—Ç–∞
            user=user,
            password=password,
            database=db,
            port=port,
            timeout=10
        )

        result = await conn.fetchval("SELECT version()")
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ IPv4 —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìã PostgreSQL: {result[:50]}...")

        await conn.close()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IPv4:")
        print(f"   –¢–∏–ø: {type(e).__name__}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {e}")


if __name__ == "__main__":
    asyncio.run(test_supabase_ipv4())
