"""
Energy Middleware –¥–ª—è Ryabot Island v2.0
–°–ø–∏—Å—ã–≤–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é –∑–∞ –ª—é–±—ã–µ –¥–µ–π—Å—Ç–≤–∏—è + —Å–∏—Å—Ç–µ–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∫–ª–∞–º–æ–π/–∫–æ–Ω—é—à–Ω–µ–π
"""
import logging
from typing import Callable, Dict, Any, Awaitable
from aiogram import BaseMiddleware
from aiogram.types import Message, CallbackQuery
from database.models import get_user, update_user_resources

logger = logging.getLogger(__name__)

class EnergyMiddleware(BaseMiddleware):
    """Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è"""

    # –°—Ç–æ–∏–º–æ—Å—Ç—å —ç–Ω–µ—Ä–≥–∏–∏ –∑–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    ENERGY_COSTS = {
        # –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏ - 1 —ç–Ω–µ—Ä–≥–∏—è
        'navigation_actions': {
            'üè† –§–µ—Ä–º–∞': 1,
            'üè¢ –ì–æ—Ä–æ–¥': 1,
            'üë§ –ñ–∏—Ç–µ–ª—å': 1,
            'üíº ‚ÇΩ—è–±–æ—Ç–∞': 1,
            'üéí –†—é–∫–∑–∞–∫': 1,
            'üë• –î—Ä—É–∑—å—è': 1,
            'üèÜ –õ–∏–¥–µ—Ä—ã': 1,
            'üóÑÔ∏è –ü—Ä–æ—á–µ–µ': 1,
        },

        # Callback –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ - 1 —ç–Ω–µ—Ä–≥–∏—è
        'navigation_callbacks': {
            'academy': 1,
            'town': 1,
            'farm': 1,
            'work': 1,
            'citizen': 1,
            'storage': 1,
            'rankings': 1,
            'referral': 1,
            'about': 1,
        },

        # –ò–≥—Ä–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è - 1 —ç–Ω–µ—Ä–≥–∏—è
        'game_actions': {
            'hire_worker': 1,
            'start_training': 1,
            'collect_resources': 1,
            'feed_animals': 1,
            'harvest_crops': 1,
            'market_purchase': 1,
            'build_construction': 1,
            'upgrade_building': 1,
            # –≠–∫—Å–ø–µ–¥–∏—Ü–∏–∏ –∏ –º–∏–Ω–∏-–∏–≥—Ä—ã –¥–æ—Ä–æ–∂–µ
            'start_expedition': 2,
            'rooster_fight': 2,
            'horse_race': 2,
        },

        # –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (–Ω–µ —Ç—Ä–∞—Ç—è—Ç —ç–Ω–µ—Ä–≥–∏—é)
        'free_actions': {
            'back', 'cancel', 'help', 'settings', 'info_',
            'lang_', 'tutorial_', 'back_to_', 'menu',
            'watch_ad',  # –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∫–ª–∞–º—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π
            'claim_stable_energy'  # –°–±–æ—Ä —ç–Ω–µ—Ä–≥–∏–∏ –∏–∑ –∫–æ–Ω—é—à–Ω–∏
        }
    }

    async def __call__(
        self,
        handler: Callable,
        event,
        data: Dict[str, Any]
    ) -> Any:
        """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ middleware"""

        user_id = None
        action_type = None

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–µ–π—Å—Ç–≤–∏–µ
        if isinstance(event, Message):
            user_id = event.from_user.id
            action_type = event.text
        elif isinstance(event, CallbackQuery):
            user_id = event.from_user.id
            action_type = event.data

        if not user_id or not action_type:
            return await handler(event, data)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–Ω–µ—Ä–≥–∏–∏
        energy_cost = self._calculate_energy_cost(action_type)

        # –ï—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–µ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
        if energy_cost == 0:
            return await handler(event, data)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–ø–∏—Å—ã–≤–∞–µ–º —ç–Ω–µ—Ä–≥–∏—é
        if not await self._consume_energy(user_id, energy_cost, event):
            return None  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        return await handler(event, data)

    def _calculate_energy_cost(self, action: str) -> int:
        """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —ç–Ω–µ—Ä–≥–∏–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è"""
        if not action:
            return 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        for free_action in self.ENERGY_COSTS['free_actions']:
            if free_action in action:
                return 0

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏—è
        if action in self.ENERGY_COSTS['navigation_actions']:
            return self.ENERGY_COSTS['navigation_actions'][action]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ callback
        if action in self.ENERGY_COSTS['navigation_callbacks']:
            return self.ENERGY_COSTS['navigation_callbacks'][action]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä–æ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        for game_action in self.ENERGY_COSTS['game_actions']:
            if game_action in action:
                return self.ENERGY_COSTS['game_actions'][game_action]

        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —Å—Ç–æ–∏—Ç 1 —ç–Ω–µ—Ä–≥–∏—é
        return 1

    async def _consume_energy(self, user_id: int, cost: int, event) -> bool:
        """–°–ø–∏—Å—ã–≤–∞–µ—Ç —ç–Ω–µ—Ä–≥–∏—é —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        try:
            user = await get_user(user_id)
            if not user:
                return True  # –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —ç–Ω–µ—Ä–≥–∏–∏
            if user.energy < cost:
                await self._send_low_energy_message(event, user.energy, cost)
                return False

            # –°–ø–∏—Å—ã–≤–∞–µ–º —ç–Ω–µ—Ä–≥–∏—é
            success = await update_user_resources(user_id, energy=-cost)
            if success:
                logger.info(f"üí° –≠–Ω–µ—Ä–≥–∏—è —Å–ø–∏—Å–∞–Ω–∞: -{cost} —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (–æ—Å—Ç–∞–ª–æ—Å—å: {user.energy - cost})")
                return True
            else:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∏—Å–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                return True  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–ø–∏—Å–∞–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏: {e}")
            return True  # –ü—Ä–∏ –æ—à–∏–±–∫–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

    async def _send_low_energy_message(self, event, current_energy: int, required_energy: int):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ—Ö–≤–∞—Ç–∫–µ —ç–Ω–µ—Ä–≥–∏–∏ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è"""
        message = f"""‚ö° **–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏!**

üîã –£ –≤–∞—Å: {current_energy} —ç–Ω–µ—Ä–≥–∏–∏
üí° –¢—Ä–µ–±—É–µ—Ç—Å—è: {required_energy} —ç–Ω–µ—Ä–≥–∏–∏

üéØ **–°–ø–æ—Å–æ–±—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏:**

üì∫ **–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–µ–∫–ª–∞–º–∞:**
‚Ä¢ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Ä–µ–∫–ª–∞–º—É ‚Üí –ø–æ–ª—É—á–∏—Ç–µ +20 —ç–Ω–µ—Ä–≥–∏–∏
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
‚Ä¢ –ù–∞–∂–º–∏—Ç–µ üëá —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å

üê¥ **–ö–æ–Ω—é—à–Ω—è (–∫–æ–≥–¥–∞ –ø–æ—Å—Ç—Ä–æ–∏—Ç–µ):**
‚Ä¢ –õ–æ—à–∞–¥–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç —ç–Ω–µ—Ä–≥–∏—é
‚Ä¢ –°–æ–±–∏—Ä–∞–π—Ç–µ –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞
‚Ä¢ –£–ª—É—á—à–∞–π—Ç–µ –¥–ª—è –±–æ–ª—å—à–µ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏

üíé **–ü—Ä–µ–º–∏—É–º —Å–ø–æ—Å–æ–±—ã:**
‚Ä¢ Quantum Keys - –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
‚Ä¢ Premium –ø–æ–¥–ø–∏—Å–∫–∞ - –≤ 2 —Ä–∞–∑–∞ –±—ã—Å—Ç—Ä–µ–µ

üí° **–°–æ–≤–µ—Ç:** –ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –∏–∑—É—á–∞–π—Ç–µ –≤–∏–∫–∏!"""

        try:
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∫–ª–∞–º—ã
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üì∫ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∫–ª–∞–º—É (+20 —ç–Ω–µ—Ä–≥–∏–∏)", callback_data="watch_ad")]
            ])

            if isinstance(event, CallbackQuery):
                await event.answer("‚ö° –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç–Ω–µ—Ä–≥–∏–∏!", show_alert=True)
                await event.message.answer(message, reply_markup=keyboard, parse_mode="Markdown")
            else:
                await event.answer(message, reply_markup=keyboard, parse_mode="Markdown")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —ç–Ω–µ—Ä–≥–∏–∏: {e}")

logger.info("‚úÖ Energy middleware –∑–∞–≥—Ä—É–∂–µ–Ω (Supabase –≤–µ—Ä—Å–∏—è)")
