"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≥–æ—Ä–æ–¥–∞
"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from database.models import get_user
from keyboards.town import get_town_menu
from utils.texts import t
from utils.states import MenuState

router = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥
@router.message(F.text.in_(["üè¢ –ì–æ—Ä–æ–¥", "Town", "üèõÔ∏è –ì–æ—Ä–æ–¥"]))
async def town_handler(message: Message, state: FSMContext):
    """–í—Ö–æ–¥ –≤ –≥–æ—Ä–æ–¥ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –º–µ–Ω—é"""
    user_id = message.from_user.id
    user = await get_user(user_id)

    if not user:
        await message.answer("‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, –Ω–∞–∂–∞–≤ /start")
        return

    town_text = t(
        "town_welcome",
        user.language,
        level=user.level,
        energy=user.energy,
        ryabucks=user.ryabucks
    )

    await message.answer(
        text=town_text,
        reply_markup=get_town_menu(user.language)
    )
    await state.set_state(MenuState.ON_ISLAND)


# –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö - –¥–ª—è callback-–∫–Ω–æ–ø–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–æ—Ä–æ–¥
@router.callback_query(F.data == "town")
async def town_callback_handler(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–æ—Ä–æ–¥ —á–µ—Ä–µ–∑ callback-–∫–Ω–æ–ø–∫—É"""
    user_id = callback.from_user.id
    user = await get_user(user_id)

    if not user:
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    town_text = t(
        "town_welcome",
        user.language,
        level=user.level,
        energy=user.energy,
        ryabucks=user.ryabucks
    )

    await callback.message.edit_text(
        text=town_text,
        reply_markup=get_town_menu(user.language)
    )
    await state.set_state(MenuState.ON_ISLAND)
    await callback.answer()


# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≥–æ—Ä–æ–¥–∞...
@router.callback_query(F.data == "town_hall")
async def town_hall_handler(callback: CallbackQuery):
    await callback.message.answer("üèõÔ∏è –†–∞—Ç—É—à–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "market")
async def market_handler(callback: CallbackQuery):
    await callback.message.answer("üõí –†—ã–Ω–æ–∫ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "ryabank")
async def ryabank_handler(callback: CallbackQuery):
    await callback.message.answer("üè¶ –†—è–ë–∞–Ω–∫ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "products")
async def products_handler(callback: CallbackQuery):
    await callback.message.answer("üè≠ –ü—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "pawnshop")
async def pawnshop_handler(callback: CallbackQuery):
    await callback.message.answer("üíé –õ–æ–º–±–∞—Ä–¥ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "tavern1")
async def tavern1_handler(callback: CallbackQuery):
    await callback.message.answer("üç∫ –¢–∞–≤–µ—Ä–Ω–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


# –í–ê–ñ–ù–û: –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ academy, —Ç.–∫. –æ–Ω —Ç–µ–ø–µ—Ä—å –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
# @router.callback_query(F.data == "academy")
# async def academy_handler(callback: CallbackQuery):
#     await callback.message.answer("üéì –ê–∫–∞–¥–µ–º–∏—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
#     await callback.answer()


@router.callback_query(F.data == "entertainment")
async def entertainment_handler(callback: CallbackQuery):
    await callback.message.answer("üé≠ –†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "real_estate")
async def real_estate_handler(callback: CallbackQuery):
    await callback.message.answer("üèòÔ∏è –ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "vet_clinic")
async def vet_clinic_handler(callback: CallbackQuery):
    await callback.message.answer("üêæ –í–µ—Ç–∫–ª–∏–Ω–∏–∫–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "construction")
async def construction_handler(callback: CallbackQuery):
    await callback.message.answer("üèóÔ∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "hospital")
async def hospital_handler(callback: CallbackQuery):
    await callback.message.answer("üè• –ë–æ–ª—å–Ω–∏—Ü–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "quantum_hub")
async def quantum_hub_handler(callback: CallbackQuery):
    await callback.message.answer("‚öõÔ∏è –ö–≤–∞–Ω—Ç–æ–≤—ã–π —Ö–∞–± - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()


@router.callback_query(F.data == "cemetery")
async def cemetery_handler(callback: CallbackQuery):
    await callback.message.answer("‚ö∞Ô∏è –ö–ª–∞–¥–±–∏—â–µ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...")
    await callback.answer()
