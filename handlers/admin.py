"""
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è Ryabot Island v2.0
–ü–æ–ª–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ Supabase –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
"""
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from database.models import get_user, get_island_stats
from utils.message_helper import send_formatted
from config import config
import logging

logger = logging.getLogger(__name__)

# –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()


def is_admin(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
    try:
        admin_ids = config.bot.admin_ids if hasattr(config.bot, 'admin_ids') else []
        return user_id in admin_ids
    except:
        # Fallback - —Ö–∞—Ä–¥–∫–æ–¥ –∞–¥–º–∏–Ω–æ–≤ –∏–∑ .env
        import os
        admin_ids_str = os.getenv("ADMIN_IDS", "")
        if admin_ids_str:
            admin_ids = [int(x.strip()) for x in admin_ids_str.split(",") if x.strip()]
            return user_id in admin_ids
        return False


@router.message(Command("stats"))
async def stats_command(message: Message):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    if not is_admin(message.from_user.id):
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —á–µ—Ä–µ–∑ Supabase
        stats = await get_island_stats()

        await message.answer(f"""
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Ryabot Island**

üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {stats.get('total_players', 0)}
‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —Å–µ–≥–æ–¥–Ω—è: {stats.get('online_players', 0)}
üí† RBTC –¥–æ–±—ã—Ç–æ —Å–µ–≥–æ–¥–Ω—è: {stats.get('daily_rbtc', 0):.2f}
üó∫Ô∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö —ç–∫—Å–ø–µ–¥–∏—Ü–∏–π: {stats.get('active_expeditions', 0)}
        """, parse_mode="Markdown")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@router.message(Command("admin"))
async def admin_command(message: Message):
    """–ê–¥–º–∏–Ω—Å–∫–∞—è –ø–∞–Ω–µ–ª—å"""
    if not is_admin(message.from_user.id):
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        return

    await message.answer("""
üîß **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞**

üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
‚Ä¢ /broadcast - –†–∞—Å—Å—ã–ª–∫–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)
‚Ä¢ /maintenance - –†–µ–∂–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)

üõ†Ô∏è –î–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ admin_tools.py
    """, parse_mode="Markdown")


@router.message(Command("version"))
async def version_command(message: Message):
    """–í–µ—Ä—Å–∏—è –±–æ—Ç–∞"""
    if not is_admin(message.from_user.id):
        return

    await message.answer("""
üèùÔ∏è **Ryabot Island v2.0**

üîß –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: Supabase
üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: PostgreSQL (Supabase)
ü§ñ Framework: aiogram 3.x
üêç Python: 3.11+
‚ö° –°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–µ–Ω
    """, parse_mode="Markdown")


logger.info("‚úÖ Admin handler –∑–∞–≥—Ä—É–∂–µ–Ω (Supabase –≤–µ—Ä—Å–∏—è)")
